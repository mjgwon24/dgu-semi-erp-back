plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

ext {
	querydslVersion = "5.0.0" // query dsl 최신 버전 (변경가능)
}

def querydslDir = "src/main/generated"

dependencies {

	// QueryDSL
	implementation "com.querydsl:querydsl-jpa:${querydslVersion}:jakarta"
	annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"


	// MapStruct
	implementation "org.mapstruct:mapstruct:1.6.3"
	annotationProcessor "org.mapstruct:mapstruct-processor:1.6.3"

	// Lombok
	compileOnly "org.projectlombok:lombok"
	annotationProcessor "org.projectlombok:lombok"

	testAnnotationProcessor "org.mapstruct:mapstruct-processor:1.6.3"
	testAnnotationProcessor "org.projectlombok:lombok"
	testAnnotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

	// MapStruct + Lombok 연결
	annotationProcessor "org.projectlombok:lombok-mapstruct-binding:0.2.0"

	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// MYSQL
	runtimeOnly 'com.mysql:mysql-connector-j'

	// JJWT
	implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'

	// CRYPTO
	implementation 'org.springframework.security:spring-security-crypto:6.4.2'

	// Spring Email
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	// Buket4j
	implementation 'com.github.vladimir-bukhtoyarov:bucket4j-core:7.6.0'
}

sourceSets {
	main {
		java {
			srcDirs += querydslDir
		}
	}
	test {
		java {
			srcDirs += querydslDir
		}
	}
}
tasks.withType(JavaCompile).configureEach {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
	options.compilerArgs += ["-Amapstruct.verbose=true"]
}